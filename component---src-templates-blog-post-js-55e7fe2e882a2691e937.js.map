{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Paper/Paper.js","webpack:///./src/templates/blog-post.js"],"names":["forwardRef","props","ref","classes","className","_props$component","component","Component","_props$square","square","_props$elevation","elevation","_props$variant","variant","other","createElement","root","outlined","concat","rounded","withStyles","theme","elevations","shadows","forEach","shadow","index","boxShadow","backgroundColor","palette","background","paper","color","text","primary","transition","transitions","create","borderRadius","shape","border","divider","name","BlogPostTemplate","darkmode","useSelector","state","toJS","post","data","markdownRemark","siteTitle","site","siteMetadata","title","pageContext","previous","next","location","frontmatter","description","excerpt","style","padding","borderBottom","marginTop","rhythm","marginBottom","display","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","to","fields","slug","rel","repo","pageQuery"],"mappings":"uOAiCI,EAAQ,IAAMA,YAAW,SAAeC,EAAOC,GACjD,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAmBJ,EAAMK,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAgBP,EAAMQ,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAmBT,EAAMU,UACzBA,OAAiC,IAArBD,EAA8B,EAAIA,EAC9CE,EAAiBX,EAAMY,QACvBA,OAA6B,IAAnBD,EAA4B,YAAcA,EACpDE,EAAQ,YAAyBb,EAAO,CAAC,UAAW,YAAa,YAAa,SAAU,YAAa,YAQzG,OAAO,IAAMc,cAAcR,EAAW,YAAS,CAC7CH,UAAW,YAAKD,EAAQa,KAAMZ,EAAuB,aAAZS,EAAyBV,EAAQc,SAAWd,EAAQ,YAAYe,OAAOP,KAAcF,GAAUN,EAAQgB,SAChJjB,IAAKA,GACJY,OAyCU,SAAAM,EAAA,IAzFK,SAAgBC,GAClC,IAAIC,EAAa,GAMjB,OALAD,EAAME,QAAQC,SAAQ,SAAUC,EAAQC,GACtCJ,EAAW,YAAYJ,OAAOQ,IAAU,CACtCC,UAAWF,MAGR,YAAS,CAEdT,KAAM,CACJY,gBAAiBP,EAAMQ,QAAQC,WAAWC,MAC1CC,MAAOX,EAAMQ,QAAQI,KAAKC,QAC1BC,WAAYd,EAAMe,YAAYC,OAAO,eAIvClB,QAAS,CACPmB,aAAcjB,EAAMkB,MAAMD,cAI5BrB,SAAU,CACRuB,OAAQ,aAAatB,OAAOG,EAAMQ,QAAQY,WAE3CnB,KAiE6B,CAChCoB,KAAM,YADO,CAEZ,G,YClGH,0CAoFeC,UA5EU,SAAC1C,GAAW,IAC5B2C,EAAYC,aAAY,SAAAC,GAAK,MAAI,CAACA,EAAMF,SAASG,OAAOH,YAAY,IADzC,GAE5BI,EAAO/C,EAAMgD,KAAKC,eAClBC,EAAYlD,EAAMgD,KAAKG,KAAKC,aAAaC,MAHb,EAIPrD,EAAMsD,YAAzBC,EAJ0B,EAI1BA,SAAUC,EAJgB,EAIhBA,KAElB,OACE,6BACE,kBAAC,IAAD,CAAQC,SAAUzD,EAAMyD,SAAUJ,MAAOH,GACvC,kBAAC,IAAD,CACEG,MAAON,EAAKW,YAAYL,MACxBM,YAAaZ,EAAKW,YAAYC,aAAeZ,EAAKa,UAEpD,iCACE,kBAAC,EAAD,CAAOC,MAAO,CAACC,QAAS,YAAanC,gBAAgBgB,EAAW,UAAU,SAC1E,4BAAQkB,MAAO,CAACE,aAAc,mBAC5B,wBAAI5D,UAAU,aACZ0D,MAAO,CACLG,UAAWC,YAAO,GAClBC,aAAc,IAGfnB,EAAKW,YAAYL,OAEpB,uBAAGlD,UAAU,YACX0D,MAAO,CACLM,QAAQ,UAGTpB,EAAKW,YAAYU,OAGtB,6BAASP,MAAO,CAACG,UAAU,QAAQK,wBAAyB,CAAEC,OAAQvB,EAAKwB,QAC3E,wBACEV,MAAO,CACLK,aAAcD,YAAO,MAGzB,mCAMF,6BACE,wBACEJ,MAAO,CACLM,QAAQ,OACRK,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVZ,QAAS,IAGX,4BACGP,GACC,kBAAC,OAAD,CAAMoB,GAAIpB,EAASqB,OAAOC,KAAMC,IAAI,QAApC,KACKvB,EAASG,YAAYL,QAI9B,4BACGG,GACC,kBAAC,OAAD,CAAMmB,GAAInB,EAAKoB,OAAOC,KAAMC,IAAI,QAC7BtB,EAAKE,YAAYL,MADpB,SAOR,kBAAC,IAAD,CAAY0B,KAAK,6BAtEzB,IA8EaC,EAAS","file":"component---src-templates-blog-post-js-55e7fe2e882a2691e937.js","sourcesContent":["import \"core-js/modules/es6.array.for-each\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var elevations = {};\n  theme.shadows.forEach(function (shadow, index) {\n    elevations[\"elevation\".concat(index)] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` */\n    outlined: {\n      border: \"1px solid \".concat(theme.palette.divider)\n    }\n  }, elevations);\n};\nvar Paper = React.forwardRef(function Paper(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 1 : _props$elevation,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'elevation' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\", \"variant\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (classes[\"elevation\".concat(elevation)] === undefined) {\n      console.error(\"Material-UI: this elevation `\".concat(elevation, \"` is not implemented.\"));\n    }\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant === 'outlined' ? classes.outlined : classes[\"elevation\".concat(elevation)], !square && classes.rounded),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   */\n  elevation: PropTypes.number,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['elevation', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { Utterances, Layout, SEO } from \"../components\"\r\nimport { rhythm, scale } from \"../utils/typography\"\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst BlogPostTemplate = (props) => {\r\n  const [darkmode] = useSelector(state => [state.darkmode.toJS().darkmode] , []);\r\n  const post = props.data.markdownRemark\r\n  const siteTitle = props.data.site.siteMetadata.title\r\n  const { previous, next } = props.pageContext\r\n\r\n  return (\r\n    <div>\r\n      <Layout location={props.location} title={siteTitle}>\r\n        <SEO\r\n          title={post.frontmatter.title}\r\n          description={post.frontmatter.description || post.excerpt}\r\n        />\r\n        <article>\r\n          <Paper style={{padding: \"35px 60px\", backgroundColor:darkmode ? \"#f0f0f0\":\"#fff\"}}>\r\n          <header style={{borderBottom: \"1px solid #ddd\"}}>\r\n            <h1 className=\"post_title\"\r\n              style={{\r\n                marginTop: rhythm(1),\r\n                marginBottom: 0,\r\n              }}\r\n            >\r\n              {post.frontmatter.title}\r\n            </h1>\r\n            <p className=\"post_date\"\r\n              style={{\r\n                display: `block`,\r\n              }}\r\n            >\r\n              {post.frontmatter.date}\r\n            </p>\r\n          </header>\r\n          <section style={{marginTop:\"46px\"}}dangerouslySetInnerHTML={{ __html: post.html }} />\r\n          <hr\r\n            style={{\r\n              marginBottom: rhythm(1),\r\n            }}\r\n          />\r\n          <footer>\r\n            {/* <Bio /> */}\r\n          </footer>\r\n          </Paper>\r\n        </article>\r\n\r\n        <nav>\r\n          <ul\r\n            style={{\r\n              display: `flex`,\r\n              flexWrap: `wrap`,\r\n              justifyContent: `space-between`,\r\n              listStyle: `none`,\r\n              padding: 0,\r\n            }}\r\n          >\r\n            <li>\r\n              {previous && (\r\n                <Link to={previous.fields.slug} rel=\"prev\">\r\n                  ← {previous.frontmatter.title}\r\n                </Link>\r\n              )}\r\n            </li>\r\n            <li>\r\n              {next && (\r\n                <Link to={next.fields.slug} rel=\"next\">\r\n                  {next.frontmatter.title} →\r\n                </Link>\r\n              )}\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <Utterances repo=\"lolmc00/Blog-Comments\" />\r\n      </Layout>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"YYYY.MM.DD\")\r\n        description\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}